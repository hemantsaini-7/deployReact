{"version":3,"sources":["components/C1.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["C1","props","state","menu","this","dishes","map","dish","key","id","className","Media","tag","object","src","image","alt","name","body","heading","description","list","Component","DISHES","category","label","price","comments","rating","comment","author","date","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa5e4dc1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\n\r\n//dekho we want a image and their desc to show on dom\r\n//now we are giving the content in an array which is in this.state\r\n//creating aconst having these all and we want to play with that data\r\n//so we map through the this.state and return the img and descp. of the data using media from reactstrap\r\n//now in our react return we just pass this const as list important to add .\r\n\r\n// changes done for better implementation that is using props to pass the dishes from another separate componentes\r\n// check out app.js comments\r\n\r\nclass C1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const menu = this.props.dishes.map((dish) => {\r\n      //this a function return\r\n      return (\r\n        <div key={dish.id} className=\"col-12 mt-5\">\r\n          <Media tag=\"li\" className=\"listyle\">\r\n            <Media>\r\n              <Media\r\n                className=\"imgstyle\"\r\n                object\r\n                src={dish.image}\r\n                alt={dish.name}\r\n              />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n              <Media heading>{dish.name}</Media>\r\n              <p>{dish.description}</p>\r\n            </Media>\r\n          </Media>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    //this is react return\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <nav className=\"bg-info\">\r\n            <ul className=\"ulstyle\">\r\n              <li>Home</li>\r\n              <li>Contact</li>\r\n              <li>About</li>\r\n              <li>Services</li>\r\n            </ul>\r\n          </nav>\r\n          <Media list>{menu}</Media>\r\n          <button className=\"bg-danger btnstyle\">Submit</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default C1;\r\n","export const DISHES = [\r\n  {\r\n    id: 0,\r\n    name: \"Uthappizza\",\r\n    image: \"assets/images/11p.jpg\",\r\n    category: \"mains\",\r\n    label: \"Hot\",\r\n    price: \"4.99\",\r\n    description:\r\n      \"A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Zucchipakoda\",\r\n    image: \"assets/images/12p.jpg\",\r\n    category: \"appetizer\",\r\n    label: \"\",\r\n    price: \"1.99\",\r\n    description:\r\n      \"Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Vadonut\",\r\n    image: \"assets/images/13p.jpg\",\r\n    category: \"appetizer\",\r\n    label: \"New\",\r\n    price: \"1.99\",\r\n    description:\r\n      \"A quintessential ConFusion experience, is it a vada or is it a donut?\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"ElaiCheese Cake\",\r\n    image: \"assets/images/14p.jpg\",\r\n    category: \"dessert\",\r\n    label: \"\",\r\n    price: \"2.99\",\r\n    description:\r\n      \"A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms\",\r\n    comments: [\r\n      {\r\n        id: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 1,\r\n        rating: 4,\r\n        comment:\r\n          \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\",\r\n      },\r\n      {\r\n        id: 4,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\nimport C1 from \"./components/C1\";\n\n// dekh pehle dishes jo bhi thi unko ek alag component bana ke daal diya\n// now hamara c1 ka jo this.state hai wo empty karde Ab\n// then that dishes file musrt be imported in the app.js file that is the main file not in index.js\n// and add these dishes in this.state of app.js and now the work of props Come\n// so we have to pass these dishes as a prop in the C1.js\n// so we pass this as C1 dishes={this.state.dishes} and call it in c1 as this.props.dishes instaed of this.state.dishes\n\nimport { DISHES } from \"./shared/dishes\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dishes: DISHES,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <MenuComponent dishes={this.state.dishes} /> */}\n        <C1 dishes={this.state.dishes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We added bootstrap and reactstrap in index.js\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}